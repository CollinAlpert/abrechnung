services:
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile-devel
      target: api
    extends:
      file: docker-compose.base.yaml
      service: api
    environment:
      DB_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres

  frontend-dev:
    build:
      context: .
      dockerfile: docker/Dockerfile-devel
      target: frontend-dev
    depends_on:
      api:
        condition: service_healthy
    links:
      - api

  nginx:
    image: docker.io/nginx:stable-alpine
    depends_on:
      api:
        condition: service_healthy
    links:
      - api
      - frontend-dev
    volumes:
      - "./docker/nginx-dynamic:/etc/nginx/conf.d/default.conf"
    ports:
      - "8080:80"

  mailer:
    extends:
      file: docker-compose.base.yaml
      service: mailer
    environment:
      SMTP_HOST: mail
      SMTP_PORT: 1025
      SMTP_MODE: smtp
      DB_HOST: postgres

    depends_on:
      api:
        condition: service_healthy
    links:
      - postgres
      - "mailhog:mail"
  cron:
    extends:
      file: docker-compose.base.yaml
      service: cron
    environment:
      SMTP_HOST: mail
      SMTP_PORT: 1025
      SMTP_MODE: smtp
      DB_HOST: postgres
    links:
      - postgres
      - "mailhog:mail"

  postgres:
    image: docker.io/postgres:14-alpine
    env_file: .env
    healthcheck:
      test: ["CMD", "/usr/local/bin/pg_isready"]
      start_period: 10s
    volumes:
      - "./data/pg:/var/lib/postgresql/data"

  mailhog:
    image: docker.io/mailhog/mailhog
    ports:
      - "8025:8025"
    env_file: .env
