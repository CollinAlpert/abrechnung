{
  "openapi": "3.1.0",
  "info": {
    "title": "Abrechnung REST-ish API",
    "license": {
      "name": "AGPL-3.0",
      "identifier": "AGPL-3.0"
    },
    "version": "0.10.1"
  },
  "paths": {
    "/api/v1/groups/{group_id}/transactions": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "list all transactions in a group",
        "operationId": "list_transactions",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          },
          {
            "name": "min_last_changed",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Last Changed"
            }
          },
          {
            "name": "transaction_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Transaction Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  },
                  "title": "Response List Transactions"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "create a new transaction",
        "operationId": "create_transaction",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCreatePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/transactions/sync": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "sync a batch of transactions",
        "operationId": "sync_transactions",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RawTransaction"
                },
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "title": "Response Sync Transactions"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "get transaction details",
        "operationId": "get_transaction",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "update transaction details",
        "operationId": "update_transaction",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionUpdatePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "transactions"
        ],
        "summary": "delete a transaction",
        "operationId": "delete_transaction",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/{transaction_id}/positions": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "update transaction positions",
        "operationId": "update_transaction_positions",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePositionsPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/{transaction_id}/commit": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "commit currently pending transaction changes",
        "operationId": "commit_transaction",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/{transaction_id}/new_change": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "create a new pending transaction revision",
        "operationId": "create_transaction_change",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/{transaction_id}/discard": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "discard currently pending transaction changes",
        "operationId": "discard_transaction_change",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/{transaction_id}/files": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "upload a file as a transaction attachment",
        "operationId": "upload_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{file_id}": {
      "delete": {
        "tags": [
          "transactions"
        ],
        "summary": "delete a transaction attachment",
        "operationId": "delete_file",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{file_id}/{blob_id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "fetch the (binary) contents of a transaction attachment",
        "operationId": "get_file_contents",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "File Id"
            }
          },
          {
            "name": "blob_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Blob Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/preview": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "preview a group before joining using an invite token",
        "operationId": "preview_group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewGroupPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupPreview"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/join": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "join a group using an invite token",
        "operationId": "join_group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewGroupPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/groups": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "list the current users groups",
        "operationId": "list_groups",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  },
                  "type": "array",
                  "title": "Response List Groups"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "create a group",
        "operationId": "create_group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/groups/{group_id}": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "fetch group details",
        "operationId": "get_group",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "update group details",
        "operationId": "update_group",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "delete a group",
        "operationId": "delete_group",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/leave": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "leave a group",
        "operationId": "leave_group",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/members": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "list all members of a group",
        "operationId": "list_members",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupMember"
                  },
                  "title": "Response List Members"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "update the permissions of a group member",
        "operationId": "update_member_permissions",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupMemberPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMember"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/logs": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "fetch the group log",
        "operationId": "list_log",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupLog"
                  },
                  "title": "Response List Log"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/send_message": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "post a message to the group log",
        "operationId": "send_group_message",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupMessage"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/invites": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "list all invite links of a group",
        "operationId": "list_invites",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupInvite"
                  },
                  "title": "Response List Invites"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "create a new group invite link",
        "operationId": "create_invite",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupInvite"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/invites/{invite_id}": {
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "delete a group invite link",
        "operationId": "delete_invite",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          },
          {
            "name": "invite_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invite Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "login with username and password",
        "operationId": "get_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "login with username and password",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "sign out of the current session",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "register a new user",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/confirm_registration": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "confirm a pending registration",
        "operationId": "confirm_registration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmRegistrationPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/profile": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "fetch user profile information",
        "operationId": "get_profile",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/profile/change_password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "change password",
        "operationId": "change_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/profile/change_email": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "change email",
        "operationId": "change_email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmailPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/confirm_email_change": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "confirm a pending email change",
        "operationId": "confirm_email_change",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmEmailChangePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/recover_password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "recover password",
        "operationId": "recover_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPasswordPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/confirm_password_recovery": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "confirm a pending password recovery",
        "operationId": "confirm_password_recovery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmPasswordRecoveryPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/delete_session": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "delete a given user session",
        "operationId": "delete_session",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSessionPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/rename_session": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "rename a given user session",
        "operationId": "rename_session",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameSessionPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/groups/{group_id}/accounts": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "list all accounts in a group",
        "operationId": "list_accounts",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  },
                  "title": "Response List Accounts"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "create a new group account",
        "operationId": "create_account",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/accounts/sync": {
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "update a collection of accounts",
        "operationId": "sync_accounts",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RawAccount"
                },
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "title": "Response Sync Accounts"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/{account_id}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "fetch a group account",
        "operationId": "get_account",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Account Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "update an account",
        "operationId": "update_account",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Account Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "accounts"
        ],
        "summary": "delete an account",
        "operationId": "delete_account",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Account Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/version": {
      "get": {
        "tags": [
          "common"
        ],
        "summary": "Get Version",
        "operationId": "get_version",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "type": {
            "$ref": "#/components/schemas/AccountType"
          },
          "is_wip": {
            "type": "boolean",
            "title": "Is Wip"
          },
          "last_changed": {
            "type": "string",
            "format": "date-time",
            "title": "Last Changed"
          },
          "committed_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "pending_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountDetails"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "group_id",
          "type",
          "is_wip",
          "last_changed",
          "committed_details",
          "pending_details"
        ],
        "title": "Account"
      },
      "AccountDetails": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "owning_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owning User Id"
          },
          "date_info": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Info"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "clearing_shares": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clearing Shares"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "owning_user_id",
          "date_info",
          "deleted",
          "tags"
        ],
        "title": "AccountDetails"
      },
      "AccountType": {
        "type": "string",
        "enum": [
          "personal",
          "clearing"
        ],
        "title": "AccountType"
      },
      "Body_get_token": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_get_token"
      },
      "Body_upload_file": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_file"
      },
      "ChangeEmailPayload": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "ChangeEmailPayload"
      },
      "ChangePasswordPayload": {
        "properties": {
          "new_password": {
            "type": "string",
            "title": "New Password"
          },
          "old_password": {
            "type": "string",
            "title": "Old Password"
          }
        },
        "type": "object",
        "required": [
          "new_password",
          "old_password"
        ],
        "title": "ChangePasswordPayload"
      },
      "ConfirmEmailChangePayload": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "ConfirmEmailChangePayload"
      },
      "ConfirmPasswordRecoveryPayload": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "ConfirmPasswordRecoveryPayload"
      },
      "ConfirmRegistrationPayload": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "ConfirmRegistrationPayload"
      },
      "CreateAccountPayload": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "date_info": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Info"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "owning_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owning User Id"
          },
          "clearing_shares": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clearing Shares"
          },
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "type"
        ],
        "title": "CreateAccountPayload"
      },
      "CreateInvitePayload": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "single_use": {
            "type": "boolean",
            "title": "Single Use"
          },
          "join_as_editor": {
            "type": "boolean",
            "title": "Join As Editor"
          },
          "valid_until": {
            "type": "string",
            "format": "date-time",
            "title": "Valid Until"
          }
        },
        "type": "object",
        "required": [
          "description",
          "single_use",
          "join_as_editor",
          "valid_until"
        ],
        "title": "CreateInvitePayload"
      },
      "DeleteSessionPayload": {
        "properties": {
          "session_id": {
            "type": "integer",
            "title": "Session Id"
          }
        },
        "type": "object",
        "required": [
          "session_id"
        ],
        "title": "DeleteSessionPayload"
      },
      "FileAttachment": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "blob_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blob Id"
          },
          "mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mime Type"
          },
          "host_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host Url"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "id",
          "filename",
          "blob_id",
          "mime_type",
          "deleted"
        ],
        "title": "FileAttachment"
      },
      "Group": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "currency_symbol": {
            "type": "string",
            "title": "Currency Symbol"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          },
          "add_user_account_on_join": {
            "type": "boolean",
            "title": "Add User Account On Join"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "type": "integer",
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "currency_symbol",
          "terms",
          "add_user_account_on_join",
          "created_at",
          "created_by"
        ],
        "title": "Group"
      },
      "GroupInvite": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_by": {
            "type": "integer",
            "title": "Created By"
          },
          "token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token"
          },
          "single_use": {
            "type": "boolean",
            "title": "Single Use"
          },
          "join_as_editor": {
            "type": "boolean",
            "title": "Join As Editor"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "valid_until": {
            "type": "string",
            "format": "date-time",
            "title": "Valid Until"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_by",
          "token",
          "single_use",
          "join_as_editor",
          "description",
          "valid_until"
        ],
        "title": "GroupInvite"
      },
      "GroupLog": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "logged_at": {
            "type": "string",
            "format": "date-time",
            "title": "Logged At"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "affected": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Affected"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "logged_at",
          "type",
          "message",
          "affected"
        ],
        "title": "GroupLog"
      },
      "GroupMember": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "is_owner": {
            "type": "boolean",
            "title": "Is Owner"
          },
          "can_write": {
            "type": "boolean",
            "title": "Can Write"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "joined_at": {
            "type": "string",
            "format": "date-time",
            "title": "Joined At"
          },
          "invited_by": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invited By"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "username",
          "is_owner",
          "can_write",
          "description",
          "joined_at",
          "invited_by"
        ],
        "title": "GroupMember"
      },
      "GroupMessage": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "GroupMessage"
      },
      "GroupPayload": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "currency_symbol": {
            "type": "string",
            "title": "Currency Symbol"
          },
          "add_user_account_on_join": {
            "type": "boolean",
            "title": "Add User Account On Join",
            "default": false
          },
          "terms": {
            "type": "string",
            "title": "Terms",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "name",
          "currency_symbol"
        ],
        "title": "GroupPayload"
      },
      "GroupPreview": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "currency_symbol": {
            "type": "string",
            "title": "Currency Symbol"
          },
          "terms": {
            "type": "string",
            "title": "Terms"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "invite_single_use": {
            "type": "boolean",
            "title": "Invite Single Use"
          },
          "invite_valid_until": {
            "type": "string",
            "format": "date-time",
            "title": "Invite Valid Until"
          },
          "invite_description": {
            "type": "string",
            "title": "Invite Description"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "currency_symbol",
          "terms",
          "created_at",
          "invite_single_use",
          "invite_valid_until",
          "invite_description"
        ],
        "title": "GroupPreview"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginPayload": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "session_name": {
            "type": "string",
            "title": "Session Name"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password",
          "session_name"
        ],
        "title": "LoginPayload"
      },
      "PreviewGroupPayload": {
        "properties": {
          "invite_token": {
            "type": "string",
            "title": "Invite Token"
          }
        },
        "type": "object",
        "required": [
          "invite_token"
        ],
        "title": "PreviewGroupPayload"
      },
      "RawAccount": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "owning_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owning User Id"
          },
          "date_info": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Info"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "clearing_shares": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clearing Shares"
          }
        },
        "type": "object",
        "required": [
          "id",
          "group_id",
          "name",
          "description",
          "owning_user_id",
          "date_info",
          "deleted",
          "tags"
        ],
        "title": "RawAccount"
      },
      "RawTransaction": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "currency_symbol": {
            "type": "string",
            "title": "Currency Symbol"
          },
          "currency_conversion_rate": {
            "type": "number",
            "title": "Currency Conversion Rate"
          },
          "billed_at": {
            "type": "string",
            "format": "date",
            "title": "Billed At"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          },
          "creditor_shares": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Creditor Shares"
          },
          "debitor_shares": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Debitor Shares"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "positions": {
            "items": {
              "$ref": "#/components/schemas/TransactionPosition"
            },
            "type": "array",
            "title": "Positions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "group_id",
          "type",
          "name",
          "description",
          "value",
          "currency_symbol",
          "currency_conversion_rate",
          "billed_at",
          "deleted",
          "creditor_shares",
          "debitor_shares",
          "tags",
          "positions"
        ],
        "title": "RawTransaction"
      },
      "RecoverPasswordPayload": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "RecoverPasswordPayload"
      },
      "RegisterPayload": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "invite_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invite Token"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password",
          "email"
        ],
        "title": "RegisterPayload"
      },
      "RegisterResponse": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "RegisterResponse"
      },
      "RenameSessionPayload": {
        "properties": {
          "session_id": {
            "type": "integer",
            "title": "Session Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "name"
        ],
        "title": "RenameSessionPayload"
      },
      "Session": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "valid_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Until"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time",
            "title": "Last Seen"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "valid_until",
          "last_seen"
        ],
        "title": "Session"
      },
      "Token": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "access_token"
        ],
        "title": "Token"
      },
      "Transaction": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "type": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "is_wip": {
            "type": "boolean",
            "title": "Is Wip"
          },
          "last_changed": {
            "type": "string",
            "format": "date-time",
            "title": "Last Changed"
          },
          "committed_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransactionDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "pending_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransactionDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "committed_positions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TransactionPosition"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Committed Positions"
          },
          "pending_positions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TransactionPosition"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pending Positions"
          },
          "committed_files": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FileAttachment"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Committed Files"
          },
          "pending_files": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FileAttachment"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pending Files"
          }
        },
        "type": "object",
        "required": [
          "id",
          "group_id",
          "type",
          "is_wip",
          "last_changed",
          "committed_details",
          "pending_details"
        ],
        "title": "Transaction"
      },
      "TransactionCreatePayload": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "currency_symbol": {
            "type": "string",
            "title": "Currency Symbol"
          },
          "currency_conversion_rate": {
            "type": "number",
            "title": "Currency Conversion Rate"
          },
          "billed_at": {
            "type": "string",
            "format": "date",
            "title": "Billed At"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "creditor_shares": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Creditor Shares"
          },
          "debitor_shares": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Debitor Shares"
          },
          "positions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TransactionPosition"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Positions"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "perform_commit": {
            "type": "boolean",
            "title": "Perform Commit",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "value",
          "currency_symbol",
          "currency_conversion_rate",
          "billed_at",
          "tags",
          "creditor_shares",
          "debitor_shares",
          "type"
        ],
        "title": "TransactionCreatePayload"
      },
      "TransactionDetails": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "currency_symbol": {
            "type": "string",
            "title": "Currency Symbol"
          },
          "currency_conversion_rate": {
            "type": "number",
            "title": "Currency Conversion Rate"
          },
          "billed_at": {
            "type": "string",
            "format": "date",
            "title": "Billed At"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          },
          "creditor_shares": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Creditor Shares"
          },
          "debitor_shares": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Debitor Shares"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "value",
          "currency_symbol",
          "currency_conversion_rate",
          "billed_at",
          "tags",
          "deleted",
          "creditor_shares",
          "debitor_shares"
        ],
        "title": "TransactionDetails"
      },
      "TransactionPosition": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "price": {
            "type": "number",
            "title": "Price"
          },
          "communist_shares": {
            "type": "number",
            "title": "Communist Shares"
          },
          "usages": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Usages"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "price",
          "communist_shares",
          "usages"
        ],
        "title": "TransactionPosition"
      },
      "TransactionType": {
        "type": "string",
        "enum": [
          "mimo",
          "purchase",
          "transfer"
        ],
        "title": "TransactionType"
      },
      "TransactionUpdatePayload": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "currency_symbol": {
            "type": "string",
            "title": "Currency Symbol"
          },
          "currency_conversion_rate": {
            "type": "number",
            "title": "Currency Conversion Rate"
          },
          "billed_at": {
            "type": "string",
            "format": "date",
            "title": "Billed At"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "creditor_shares": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Creditor Shares"
          },
          "debitor_shares": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Debitor Shares"
          },
          "positions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TransactionPosition"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Positions"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          },
          "perform_commit": {
            "type": "boolean",
            "title": "Perform Commit",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "value",
          "currency_symbol",
          "currency_conversion_rate",
          "billed_at",
          "tags",
          "creditor_shares",
          "debitor_shares"
        ],
        "title": "TransactionUpdatePayload"
      },
      "UpdateAccountPayload": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "date_info": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Info"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "owning_user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owning User Id"
          },
          "clearing_shares": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clearing Shares"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "UpdateAccountPayload"
      },
      "UpdateGroupMemberPayload": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "can_write": {
            "type": "boolean",
            "title": "Can Write"
          },
          "is_owner": {
            "type": "boolean",
            "title": "Is Owner"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "can_write",
          "is_owner"
        ],
        "title": "UpdateGroupMemberPayload"
      },
      "UpdatePositionsPayload": {
        "properties": {
          "positions": {
            "items": {
              "$ref": "#/components/schemas/TransactionPosition"
            },
            "type": "array",
            "title": "Positions"
          },
          "perform_commit": {
            "type": "boolean",
            "title": "Perform Commit",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "positions"
        ],
        "title": "UpdatePositionsPayload"
      },
      "User": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "registered_at": {
            "type": "string",
            "format": "date-time",
            "title": "Registered At"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          },
          "pending": {
            "type": "boolean",
            "title": "Pending"
          },
          "sessions": {
            "items": {
              "$ref": "#/components/schemas/Session"
            },
            "type": "array",
            "title": "Sessions"
          },
          "is_guest_user": {
            "type": "boolean",
            "title": "Is Guest User"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "registered_at",
          "deleted",
          "pending",
          "sessions",
          "is_guest_user"
        ],
        "title": "User"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VersionResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          },
          "major_version": {
            "type": "integer",
            "title": "Major Version"
          },
          "minor_version": {
            "type": "integer",
            "title": "Minor Version"
          },
          "patch_version": {
            "type": "integer",
            "title": "Patch Version"
          }
        },
        "type": "object",
        "required": [
          "version",
          "major_version",
          "minor_version",
          "patch_version"
        ],
        "title": "VersionResponse",
        "example": {
          "major_version": 1,
          "minor_version": 3,
          "patch_version": 2,
          "version": "1.3.2"
        }
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "api/v1/auth/token"
          }
        }
      }
    }
  }
}
