name: frontend
on:
  workflow_call:

jobs:
  format:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v2
      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Check JavaScript formatting
        run: npx prettier --check .

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v2
      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Build web app
        run: npx nx run-many --target test

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v2
      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Build web app
        run: npx nx run-many --target lint

  build-web:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v2
      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Build web app
        run: npx nx build web

  build-app:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3

      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build App APK
        run: npx nx build-android mobile --tasks assembleRelease

#      - name: Sign App APK
#        id: sign_app_apk
#        uses: r0adkll/sign-android-release@v1
#        with:
#          releaseDirectory: frontend/apps/mobile/android/app/build/outputs/apk/release
#          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
#          alias: ${{ secrets.ANDROID_KEY_STORE_ALIAS }}
#          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}

#      - name: Upload APK
#        uses: actions/upload-artifact@v3
#        with:
#          name: app-release-apk
#          path: ${{steps.sign_app_apk.outputs.signedReleaseFile}}
